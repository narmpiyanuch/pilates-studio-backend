// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum paymentType {
  QRCODE
  CREDIT
}

enum paymentStatus {
  PENDING
  APPROVED
}

model User {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  password     String
  email        String        @unique
  mobile       String        @unique
  profileImg   String?
  role         Role
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  transactions Transaction[]
  reservations Reservation[]
  sessions     Session[]
}

model Transaction {
  id         Int           @id @default(autoincrement())
  amount     Int
  price      String
  paymentImg String
  status     paymentStatus @default(PENDING)
  type       paymentType   @default(QRCODE)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now())
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  package    Package       @relation(fields: [packageId], references: [id])
  packageId  Int
}

model Classroom {
  id           Int           @id @default(autoincrement())
  classname    String
  time         String
  userlimit    String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  reservations Reservation[]
}

model Reservation {
  id          Int       @id @default(autoincrement())
  date        DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId Int
}

model Session {
  id        Int      @id @default(autoincrement())
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Package {
  id           Int           @id @default(autoincrement())
  packageName  String
  amountTotal  Int
  pricePerTime String
  totalPrice   String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  transactions Transaction[]
}
